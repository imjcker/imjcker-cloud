<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imjcker.manager.manage.mapper.RequestParamsMapper" >
  <resultMap id="BaseResultMap" type="com.imjcker.manager.manage.po.RequestParams" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="apiId" property="apiId" jdbcType="INTEGER" />
    <result column="paramName" property="paramName" jdbcType="VARCHAR" />
    <result column="paramsType" property="paramsType" jdbcType="INTEGER" />
    <result column="paramsLocation" property="paramsLocation" jdbcType="INTEGER" />
    <result column="paramsMust" property="paramsMust" jdbcType="INTEGER" />
    <result column="paramsDefaultValue" property="paramsDefaultValue" jdbcType="VARCHAR" />
    <result column="paramsExample" property="paramsExample" jdbcType="VARCHAR" />
    <result column="paramsDescription" property="paramsDescription" jdbcType="VARCHAR" />
    <result column="minLength" property="minLength" jdbcType="INTEGER" />
    <result column="maxLength" property="maxLength" jdbcType="INTEGER" />
    <result column="regularExpress" property="regularExpress" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="BIGINT" />
    <result column="updateTime" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, apiId, paramName, paramsType, paramsLocation, paramsMust, paramsDefaultValue,
    paramsExample, paramsDescription, minLength, maxLength, regularExpress, status, createTime,
    updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imjcker.manager.manage.po.RequestParamsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from request_params
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from request_params
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from request_params
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imjcker.manager.manage.po.RequestParamsExample" >
    delete from request_params
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imjcker.manager.manage.po.RequestParams" useGeneratedKeys="true" keyProperty="id">
    insert into request_params (id, apiId, paramName,
      paramsType, paramsLocation, paramsMust,
      paramsDefaultValue, paramsExample, paramsDescription,
      minLength, maxLength, regularExpress,
      status, createTime, updateTime
      )
    values (#{id,jdbcType=INTEGER}, #{apiId,jdbcType=INTEGER}, #{paramName,jdbcType=VARCHAR},
      #{paramsType,jdbcType=INTEGER}, #{paramsLocation,jdbcType=INTEGER}, #{paramsMust,jdbcType=INTEGER},
      #{paramsDefaultValue,jdbcType=VARCHAR}, #{paramsExample,jdbcType=VARCHAR}, #{paramsDescription,jdbcType=VARCHAR},
      #{minLength,jdbcType=INTEGER}, #{maxLength,jdbcType=INTEGER}, #{regularExpress,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imjcker.manager.manage.po.RequestParams" >
    insert into request_params
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="apiId != null" >
        apiId,
      </if>
      <if test="paramName != null" >
        paramName,
      </if>
      <if test="paramsType != null" >
        paramsType,
      </if>
      <if test="paramsLocation != null" >
        paramsLocation,
      </if>
      <if test="paramsMust != null" >
        paramsMust,
      </if>
      <if test="paramsDefaultValue != null" >
        paramsDefaultValue,
      </if>
      <if test="paramsExample != null" >
        paramsExample,
      </if>
      <if test="paramsDescription != null" >
        paramsDescription,
      </if>
      <if test="minLength != null" >
        minLength,
      </if>
      <if test="maxLength != null" >
        maxLength,
      </if>
      <if test="regularExpress != null" >
        regularExpress,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=INTEGER},
      </if>
      <if test="paramName != null" >
        #{paramName,jdbcType=VARCHAR},
      </if>
      <if test="paramsType != null" >
        #{paramsType,jdbcType=INTEGER},
      </if>
      <if test="paramsLocation != null" >
        #{paramsLocation,jdbcType=INTEGER},
      </if>
      <if test="paramsMust != null" >
        #{paramsMust,jdbcType=INTEGER},
      </if>
      <if test="paramsDefaultValue != null" >
        #{paramsDefaultValue,jdbcType=VARCHAR},
      </if>
      <if test="paramsExample != null" >
        #{paramsExample,jdbcType=VARCHAR},
      </if>
      <if test="paramsDescription != null" >
        #{paramsDescription,jdbcType=VARCHAR},
      </if>
      <if test="minLength != null" >
        #{minLength,jdbcType=INTEGER},
      </if>
      <if test="maxLength != null" >
        #{maxLength,jdbcType=INTEGER},
      </if>
      <if test="regularExpress != null" >
        #{regularExpress,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imjcker.manager.manage.po.RequestParamsExample" resultType="java.lang.Integer" >
    select count(1) from request_params
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update request_params
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.apiId != null" >
        apiId = #{record.apiId,jdbcType=INTEGER},
      </if>
      <if test="record.paramName != null" >
        paramName = #{record.paramName,jdbcType=VARCHAR},
      </if>
      <if test="record.paramsType != null" >
        paramsType = #{record.paramsType,jdbcType=INTEGER},
      </if>
      <if test="record.paramsLocation != null" >
        paramsLocation = #{record.paramsLocation,jdbcType=INTEGER},
      </if>
      <if test="record.paramsMust != null" >
        paramsMust = #{record.paramsMust,jdbcType=INTEGER},
      </if>
      <if test="record.paramsDefaultValue != null" >
        paramsDefaultValue = #{record.paramsDefaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.paramsExample != null" >
        paramsExample = #{record.paramsExample,jdbcType=VARCHAR},
      </if>
      <if test="record.paramsDescription != null" >
        paramsDescription = #{record.paramsDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.minLength != null" >
        minLength = #{record.minLength,jdbcType=INTEGER},
      </if>
      <if test="record.maxLength != null" >
        maxLength = #{record.maxLength,jdbcType=INTEGER},
      </if>
      <if test="record.regularExpress != null" >
        regularExpress = #{record.regularExpress,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update request_params
    set id = #{record.id,jdbcType=INTEGER},
      apiId = #{record.apiId,jdbcType=INTEGER},
      paramName = #{record.paramName,jdbcType=VARCHAR},
      paramsType = #{record.paramsType,jdbcType=INTEGER},
      paramsLocation = #{record.paramsLocation,jdbcType=INTEGER},
      paramsMust = #{record.paramsMust,jdbcType=INTEGER},
      paramsDefaultValue = #{record.paramsDefaultValue,jdbcType=VARCHAR},
      paramsExample = #{record.paramsExample,jdbcType=VARCHAR},
      paramsDescription = #{record.paramsDescription,jdbcType=VARCHAR},
      minLength = #{record.minLength,jdbcType=INTEGER},
      maxLength = #{record.maxLength,jdbcType=INTEGER},
      regularExpress = #{record.regularExpress,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imjcker.manager.manage.po.RequestParams" >
    update request_params
    <set >
      <if test="apiId != null" >
        apiId = #{apiId,jdbcType=INTEGER},
      </if>
      <if test="paramName != null" >
        paramName = #{paramName,jdbcType=VARCHAR},
      </if>
      <if test="paramsType != null" >
        paramsType = #{paramsType,jdbcType=INTEGER},
      </if>
      <if test="paramsLocation != null" >
        paramsLocation = #{paramsLocation,jdbcType=INTEGER},
      </if>
      <if test="paramsMust != null" >
        paramsMust = #{paramsMust,jdbcType=INTEGER},
      </if>
      <if test="paramsDefaultValue != null" >
        paramsDefaultValue = #{paramsDefaultValue,jdbcType=VARCHAR},
      </if>
      <if test="paramsExample != null" >
        paramsExample = #{paramsExample,jdbcType=VARCHAR},
      </if>
      <if test="paramsDescription != null" >
        paramsDescription = #{paramsDescription,jdbcType=VARCHAR},
      </if>
      <if test="minLength != null" >
        minLength = #{minLength,jdbcType=INTEGER},
      </if>
      <if test="maxLength != null" >
        maxLength = #{maxLength,jdbcType=INTEGER},
      </if>
      <if test="regularExpress != null" >
        regularExpress = #{regularExpress,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imjcker.manager.manage.po.RequestParams" >
    update request_params
    set apiId = #{apiId,jdbcType=INTEGER},
      paramName = #{paramName,jdbcType=VARCHAR},
      paramsType = #{paramsType,jdbcType=INTEGER},
      paramsLocation = #{paramsLocation,jdbcType=INTEGER},
      paramsMust = #{paramsMust,jdbcType=INTEGER},
      paramsDefaultValue = #{paramsDefaultValue,jdbcType=VARCHAR},
      paramsExample = #{paramsExample,jdbcType=VARCHAR},
      paramsDescription = #{paramsDescription,jdbcType=VARCHAR},
      minLength = #{minLength,jdbcType=INTEGER},
      maxLength = #{maxLength,jdbcType=INTEGER},
      regularExpress = #{regularExpress,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateStatus2EnableById" parameterType="java.lang.Integer" >
    update request_params
    set
    status = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStatus2DisableById" parameterType="java.lang.Integer" >
    update request_params
    set
    status = 2
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
