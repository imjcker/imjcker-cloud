<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imjcker.manager.manage.mapper.ApiAppRelationMapper" >
  <resultMap id="BaseResultMap" type="com.imjcker.manager.manage.po.ApiAppRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="apiId" property="apiId" jdbcType="INTEGER" />
    <result column="appCertificationId" property="appCertificationId" jdbcType="INTEGER" />
    <result column="env" property="env" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="BIGINT" />
    <result column="updateTime" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, apiId, appCertificationId, env, status, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imjcker.manager.manage.po.ApiAppRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_app_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from api_app_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from api_app_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imjcker.manager.manage.po.ApiAppRelationExample" >
    delete from api_app_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imjcker.manager.manage.po.ApiAppRelation" useGeneratedKeys="true" keyProperty="id">
    insert into api_app_relation (id, apiId, appCertificationId,
      env, status, createTime,
      updateTime)
    values (#{id,jdbcType=INTEGER}, #{apiId,jdbcType=INTEGER}, #{appCertificationId,jdbcType=INTEGER},
      #{env,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT},
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.imjcker.manager.manage.po.ApiAppRelation" >
    insert into api_app_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="apiId != null" >
        apiId,
      </if>
      <if test="appCertificationId != null" >
        appCertificationId,
      </if>
      <if test="env != null" >
        env,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=INTEGER},
      </if>
      <if test="appCertificationId != null" >
        #{appCertificationId,jdbcType=INTEGER},
      </if>
      <if test="env != null" >
        #{env,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imjcker.manager.manage.po.ApiAppRelationExample" resultType="java.lang.Integer" >
    select count(1) from api_app_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_app_relation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.apiId != null" >
        apiId = #{record.apiId,jdbcType=INTEGER},
      </if>
      <if test="record.appCertificationId != null" >
        appCertificationId = #{record.appCertificationId,jdbcType=INTEGER},
      </if>
      <if test="record.env != null" >
        env = #{record.env,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_app_relation
    set id = #{record.id,jdbcType=INTEGER},
      apiId = #{record.apiId,jdbcType=INTEGER},
      appCertificationId = #{record.appCertificationId,jdbcType=INTEGER},
      env = #{record.env,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imjcker.manager.manage.po.ApiAppRelation" >
    update api_app_relation
    <set >
      <if test="apiId != null" >
        apiId = #{apiId,jdbcType=INTEGER},
      </if>
      <if test="appCertificationId != null" >
        appCertificationId = #{appCertificationId,jdbcType=INTEGER},
      </if>
      <if test="env != null" >
        env = #{env,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imjcker.manager.manage.po.ApiAppRelation" >
    update api_app_relation
    set apiId = #{apiId,jdbcType=INTEGER},
      appCertificationId = #{appCertificationId,jdbcType=INTEGER},
      env = #{env,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
