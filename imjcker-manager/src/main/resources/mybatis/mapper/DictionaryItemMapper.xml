<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imjcker.manager.manage.mapper.DictionaryItemMapper" >
  <resultMap id="BaseResultMap" type="com.imjcker.manager.manage.po.DictionaryItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="dictionaryId" property="dictionaryId" jdbcType="INTEGER" />
    <result column="dictItemName" property="dictItemName" jdbcType="VARCHAR" />
    <result column="dictItemValue" property="dictItemValue" jdbcType="VARCHAR" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="BIGINT" />
    <result column="updateTime" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="BaseResultMapConfuse" type="com.imjcker.manager.manage.po.DictionaryItemWithQuery" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="dictionaryId" property="dictionaryId" jdbcType="INTEGER" />
    <result column="dictItemName" property="dictItemName" jdbcType="VARCHAR" />
    <result column="dictItemValue" property="dictItemValue" jdbcType="VARCHAR" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="BIGINT" />
    <result column="updateTime" property="updateTime" jdbcType="BIGINT" />
    <result column="dictName" property="dictName" jdbcType="VARCHAR" />
    <result column="dictValue" property="dictValue" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, dictionaryId, dictItemName, dictItemValue, status, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imjcker.manager.manage.po.DictionaryItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dictionary_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from dictionary_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dictionary_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imjcker.manager.manage.po.DictionaryItemExample" >
    delete from dictionary_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imjcker.manager.manage.po.DictionaryItem" useGeneratedKeys="true" keyProperty="id">
    insert into dictionary_item (id, dictionaryId, dictItemName,
    dictItemValue, status, createTime,
    updateTime)
    values (#{id,jdbcType=INTEGER}, #{dictionaryId,jdbcType=INTEGER}, #{dictItemName,jdbcType=VARCHAR},
    #{dictItemValue,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT},
    #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.imjcker.manager.manage.po.DictionaryItem" >
    insert into dictionary_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dictionaryId != null" >
        dictionaryId,
      </if>
      <if test="dictItemName != null" >
        dictItemName,
      </if>
      <if test="dictItemValue != null" >
        dictItemValue,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dictionaryId != null" >
        #{dictionaryId,jdbcType=INTEGER},
      </if>
      <if test="dictItemName != null" >
        #{dictItemName,jdbcType=VARCHAR},
      </if>
      <if test="dictItemValue != null" >
        #{dictItemValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imjcker.manager.manage.po.DictionaryItemExample" resultType="java.lang.Integer" >
    select count(*) from dictionary_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dictionary_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dictionaryId != null" >
        dictionaryId = #{record.dictionaryId,jdbcType=INTEGER},
      </if>
      <if test="record.dictItemName != null" >
        dictItemName = #{record.dictItemName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictItemValue != null" >
        dictItemValue = #{record.dictItemValue,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dictionary_item
    set id = #{record.id,jdbcType=INTEGER},
    dictionaryId = #{record.dictionaryId,jdbcType=INTEGER},
    dictItemName = #{record.dictItemName,jdbcType=VARCHAR},
    dictItemValue = #{record.dictItemValue,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=INTEGER},
    createTime = #{record.createTime,jdbcType=BIGINT},
    updateTime = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imjcker.manager.manage.po.DictionaryItem" >
    update dictionary_item
    <set >
      <if test="dictionaryId != null" >
        dictionaryId = #{dictionaryId,jdbcType=INTEGER},
      </if>
      <if test="dictItemName != null" >
        dictItemName = #{dictItemName,jdbcType=VARCHAR},
      </if>
      <if test="dictItemValue != null" >
        dictItemValue = #{dictItemValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imjcker.manager.manage.po.DictionaryItem" >
    update dictionary_item
    set dictionaryId = #{dictionaryId,jdbcType=INTEGER},
    dictItemName = #{dictItemName,jdbcType=VARCHAR},
    dictItemValue = #{dictItemValue,jdbcType=VARCHAR},
    status = #{status,jdbcType=INTEGER},
    createTime = #{createTime,jdbcType=BIGINT},
    updateTime = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectConfuse" resultMap="BaseResultMapConfuse" parameterType="java.util.Map" >
    select
    a.id, a.dictionaryId, a.dictItemName, a.dictItemValue, a.status, a.createTime, a.updateTime,b.dictName,b.dictValue
    from dictionary_item a LEFT JOIN dictionary b on a.dictionaryId = b.id
    where a.status = 1 and b.status = 1
    <if test="dictItemName != null" >
      and a.dictItemName like #{dictItemName,jdbcType=VARCHAR}
    </if>
    <if test="dictItemValue != null" >
      and a.dictItemValue like #{dictItemValue,jdbcType=VARCHAR}
    </if>
    <if test="dictionaryId != null" >
      and a.dictionaryId = #{dictionaryId,jdbcType=INTEGER}
    </if>
    order by a.createTime DESC
  </select>
</mapper>
